* Implement the backspace key

* Overflow/underflow for operators
* Display negative numbers
* If you start with an operator, you should load the previous result as the first operand
* Separate error field, so we can keep editing?
* move Keypad constants to Operator?

* Introduce an enum for the types of elements like number or operator
* Parentheses

* Set result type ('show as')

* Update EGTest to take new check() with try from ContentViewTests

CALC-23-08: 2023-06-01  Parse and Evaluate at '='
* Change input as String to [String]
* Change input to be a Stack<String>
* Type the whole expression before = evaluates
* Eliminate pending & lastOperator in Calculator
* Introduced Expression and InputBuffer types
* No purple errors today, so we're assuming we've fixed it

CALC-23-07: 2023-05-31 - Full Unit Input
* Make Keypad a struct
* Try to eliminate purple runtime errors by removing @StateObject from ContentViewTests
* Add spaces before and after units
* Make "ft 3 in 2" == "3 ft 2 in" for input
* "ft=" should be error
* What about "3 yd ft 2 in"? (Should only take last unit?)
* What about "5 ft 2" - is an error
* Show most recent operator in the display
* If you hit two operators in a row, the last one should win
* Developed an input buffer, with simple editing, that captures the whole expression

CALC-23-06: 2023-05-30 - Associativity
* [Off camera] Improve system tests to accept all keystrokes and show file/line of errors
* Simplify Value.plus
* Stack object
* Operator objects
* Subtraction - check that associativity is correct
* Multiplication - check that precedence is correct
* Split out a separate result so the display shows it when the operand stack is empty - and that result starts with 0.

CALC-23-05: 2023-05-29 - Yards-Feet-Inches Input
* Parse yard/feet/inches
* Error handling on display side - give .error a string
* Addition with units
* Simple subtraction (no associativity yet)
* Simplify our system tests
* Tried but failed to eliminate purple errors - made Keypad press pass the calculator instead of doing it in the init

CALC-23-04: 2023-05-25 - Yards-Feet-Inches
* Changed Regex to use /notation/ and eliminate try-catch
* Make all units in inches
* Move parsing to Value
* Introduce ImperialFormatter to display unit values properly
* Display as yards-feet-inches

CALC-23-03: 2023-05-24 - Enter Units
* Switched Calculator to separate "pending" (entered string) from display
* Make display pull from either pending or value
* The = evaluates a pending into a value if needed
* What if you enter multiple leading zeros? They go away when you hit =.
* Handle invalid input
* Allow entering inches

CALC-23-02: 2023-05-23 - ViewInspector Tests
* Off camera: installed SwiftLint, fixed its warnings
* Off camera: remove unused UI tests
* Check that = properly resets the display
* Create ViewInspector test to check digit keypress
* Make uncommitted number be in italics
* Clear key
* Use Buttons on keys

CALC-23-01: 2023-05-22 - Introducing InchCalc
InchCalc - new project
* Created Key, Keypad, and Calculator
* Created initial view
* Reorganize how Calculator and Keypad are owned
* Test Key.action
