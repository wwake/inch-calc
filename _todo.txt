* Subtraction - check that associativity is right
* Other operators
* Show last operator in the display?
* How are we handling the initial "0"?

* Make "ft 3 in 2" == "3 ft 2 in" for input
* Add spaces before and after units
* What about "3 yd ft 2 in"? (Should only take last unit?)
* Set result type ('show as')
* Track down purple errors on view tests


* Update EGTest to take new check() with try from ContentViewTests

CALC-23-05: 2023-05-29 - Yards-Feet-Inches Input
* Parse yard/feet/inches
* Error handling on display side - give .error a string
* Addition with units
* Simplify our system tests


CALC-23-04: 2023-05-25 - Yards-Feet-Inches
* Changed Regex to use /notation/ and eliminate try-catch
* Make all units in inches
* Move parsing to Value
* Introduce ImperialFormatter to display unit values properly
* Display as yards-feet-inches

CALC-23-03: 2023-05-24 - Enter Units
* Switched Calculator to separate "pending" (entered string) from display
* Make display pull from either pending or value
* The = evaluates a pending into a value if needed
* What if you enter multiple leading zeros? They go away when you hit =.
* Handle invalid input
* Allow entering inches

CALC-23-02: 2023-05-23 - ViewInspector Tests
* Off camera: installed SwiftLint, fixed its warnings
* Off camera: remove unused UI tests
* Check that = properly resets the display
* Create ViewInspector test to check digit keypress
* Make uncommitted number be in italics
* Clear key
* Use Buttons on keys

CALC-23-01: 2023-05-22 - Introducing InchCalc
InchCalc - new project
* Created Key, Keypad, and Calculator
* Created initial view
* Reorganize how Calculator and Keypad are owned
* Test Key.action
